---
import Avatar from '@components/avatar/avatar.astro'
import Layout from '@layout/layout.astro'
import type { Article } from '@lib/article/types'
import { Markdown } from 'astro-remote'
import CommentForm from '@components/forms/comment.astro'
import CommentList from '@components/list/comment.astro'

const { id } = Astro.params

const actionManager = Astro.locals.actionManager

const article: Article = await actionManager.execute('article.get', { article: { id } })

actionManager.setContext({ ...actionManager.getContext(), article })
---

<Layout title={article.title}>
	<article class='prose max-w-7xl flex flex-col'>
		{
			article.id ? (
				<Fragment>
					<div class='flex place-content-between'>
						<Avatar
							avatar={
								article.author?.avatar ?? 'https://cdn.jsdelivr.net/gh/alohe/memojis/png/vibrent_7.png'
							}
							name={article.author?.name ?? 'Unknown'}
							email={article.author?.email ?? 'Unknown'}
						/>
						<div class='flex flex-row gap-5 place-content-end'>
							{actionManager.canExecute('article.edit') && (
								<a class='btn btn-warning' href={`/articles/edit/${article.id}`}>
									Edit
								</a>
							)}
							{actionManager.canExecute('article.delete') && (
								<form method='POST' action={`/api/articles/delete/${article.id}`}>
									<button type='submit' class='btn btn-danger'>
										Delete
									</button>
								</form>
							)}
						</div>
					</div>
					<Markdown content={article.content} />
					<div class='man-w-7xl px-4'>
						<CommentList comments={article.comments} />
						{actionManager.canExecute('comment.create') && <CommentForm articleId={article.id} />}
					</div>
				</Fragment>
			) : (
				<p>Article not found</p>
			)
		}
	</article>
</Layout>
